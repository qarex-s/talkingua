@using TalkingUADev.Areas.Identity.Data;
@model TalkingUADev.Util.UtilChat

@{
    Layout = "_Layout";
}

<link rel="stylesheet" href="~/css/styleMessenger.css">
<div class="chat">
    <div class="side">
        <div class="nickname">
            <div>
                @if (Model.mainUser.ImageTitle != null)
                {
                    <img src="@($"/UsersAvatars/UserPostBy{Model.mainUser.Email}/{Model.mainUser.ImageTitle}")" alt="">
                }
                else
                {
                    <img src="@($"/Img/def_ava.png")" alt="">
                }
            </div>
            <p>@@@Model.mainUser.Name</p>
        </div>
        <div class="hr"></div>






        <div class="add-chat">
            <a href="#openModal"><button>Додати чат</button></a>
            <div id="openModal" class="modal">
                <div class="modal-dialog">
                    <div class="modal-content">
                        <div class="modal-header">
                            <h3 class="modal-title">Додати чат</h3>
                            <a href="#close" title="Close" class="close">×</a>
                        </div>
                        <div class="modal-body">
                            <form method="post" action="AddingNewChat" name="myForm" onsubmit="return validateFormEmpty()">
                                <input type="text" name="name" id="chatName">
                                <select name="SecondUserId" required="required">
                                    @foreach (var itemFollowUser in Model.FriendsUser)
                                    {
                                        <option value="@itemFollowUser.Id">@@@itemFollowUser.Name</option>
                                    }
                                </select>
                                <input type="submit" >
                            </form>
                        </div>
                    </div>
                </div>
            </div>
        </div>







        <div class="users">
            @if (@Model.ListChats != null)
            {
                @foreach (var itemChat in Model.ListChats)
                {
                    <a href="Menu?RoomId=@itemChat.chatRoomId" class="list-group-item active">

                        <div class="user active">
                            <div>
                                <div class="avatar">
                                    @if ( itemChat.SecondUser.ImageTitle!=null && itemChat.SecondUser!=Model.mainUser )
                                    {
                                        if(Model.mainUser != itemChat.SecondUser)
                                        {
                                            <img src="@($"/UsersAvatars/UserPostBy{itemChat.SecondUser.Email}/{itemChat.SecondUser.ImageTitle}")" alt="Avatar">
                                        }
                                        else
                                        {
                                            <img src="@($"/UsersAvatars/UserPostBy{itemChat.MainUser.Email}/{itemChat.MainUser.ImageTitle}")" alt="Avatar">
                                            
                                        }
                                    }
                                    else
                                    {
                                        <img src="@($"/Img/def_ava.png")" alt="Avatar">
                                    }

                                </div>
                                <div>
                                    <div class="nick">
                                        <p>Чат: @itemChat.chatRoom.ChatRoomName</p>
                                    </div>
                                    <div class="message">
                                        <p>@itemChat.SecondUser.FullName</p>
                                    </div>
                                </div>
                            </div>
                            <div class="time">
                                @if (Model.mainUser != itemChat.SecondUser)
                                {
                                    <p>@@@itemChat.SecondUser.Name</p>
                                }
                                else
                                {
                                <p>@@@itemChat.MainUser.Name</p>
                                
                                }
                            </div>
                        </div>
                    </a>

                }

            }


        </div>
        @if (@Model.someChat != null)
            {
        <div class="btn-get">
            <form class="form-message" id="GettingMess" method="post" action="MenuPartial">
                <input type="hidden" name="RoomId" value="@Model.someChat.chatRoomId" />
                <button>Отримати повідомлення</button>
            </form>
        </div>
            }
    </div>
    <div class="main">
       @if (@Model.someChat != null)
            {
            <div class="interlocutor">

                <div>
                    <div class="active-avatar">

                        @if (Model.someChat.SecondUser.ImageTitle!=null && Model.someChat.SecondUser!=Model.mainUser )
                        {
                            if (Model.someChat.SecondUser != Model.mainUser)
                            {
                                <img src="@($"/UsersAvatars/UserPostBy{Model.someChat.SecondUser.Email}/{Model.someChat.SecondUser.ImageTitle}")" alt="Avatar">
                            }
                            else
                            {
                                <img src="@($"/UsersAvatars/UserPostBy{Model.someChat.MainUser.Email}/{Model.someChat.MainUser.ImageTitle}")" alt="Avatar">
                            }
                        }
                        else
                        {
                            <img src="@($"/Img/def_ava.png")" alt="Avatar">
                        }
                    </div>
                <div>
                    <div class="active-nick">
                            @if (Model.mainUser != Model.someChat.SecondUser)
                            {
                            <p>@Model.someChat.SecondUser.Name</p>
                                
                            }else
                            {
                            <p>@Model.someChat.MainUser.Name</p>
                                
                            }
                    </div>
                    <div class="active-online">
                        <div></div>
                        <p>Чат: @Model.someChat.chatRoom.ChatRoomName</p>
                    </div>
                </div>
            </div>
            <div class="active-time">
                <p>@DateTime.Now.ToString("HH:mm")</p>
            </div>
        </div>
         <div class="conversation">
            <div id="forAjaxChat">
                @{
                    await Html.RenderPartialAsync("_PartialChatMenu", Model);
                }
            </div>
            <div class="hr"></div>
            @if (Model.chatRooms != null)
            {
                <form class="form-message" id="SeddingMess" method="post" action="AddingNewMessage">
                    <div class="input">
                        <textarea name="message" id="inputMessVal" placeholder="Введіть повідомлення"></textarea>
                        <input type="hidden" name="chatId" value="@Model.someChat.Id" />
                        <div class="line"></div>
                        <button class="submit" type="submit">
                            Надіслати
                        </button>
                    </div>
                </form>
            }
        </div>
        }
       



    </div>
</div>


@{

}

@*
</style>
<div class="container">
    <div class="row">
        <div class="col-md-3 col-lg-2 user-list">
            <div class="list-group">
                @if (Model.chatRooms != null)
                {
                    @foreach (var item in Model.chatRooms)
                    {
                        <a href="Menu?RoomId=@item.ChatRoomId" class="list-group-item active">@item.ChatRoomName</a>
                    }
                }
                <button type="button" class="btn btn-primary" style="background-color:#070707; color:orange" data-bs-toggle="modal" data-bs-target="#exampleModal">
                    <i class="bi bi-plus-lg"></i> Добавить чат
                </button>
            </div>
        </div>
        <div class="col-md-9 col-lg-10" id="someChats">
            <div id="forAjaxChat">
                @{
                    await Html.RenderPartialAsync("_PartialChatMenu", Model);
                }
            </div>

            @if (Model.chatRooms != null)
            {
                <form class="form-message" id="SeddingMess" method="post" action="AddingNewMessage">
                    <input type="text" class="form-control" name="message" placeholder="Type your message here...">
                    <input type="hidden" name="chatId" value="@Model.someChat.Id" />
                    <button type="submit" class="btn btn-primary">Send</button>
                </form>
            }

        </div>
    </div>
</div>*@
<script src="~/js/jquery-3.6.3Master.min.js"> </script>
<script src="~/js/scriptMessenger.js"></script>
<script>
    $(document).ready(function() {
        $('#SeddingMess').submit(function(e) {
            e.preventDefault();
            e.stopPropagation();
            var form = $(this);
            var url = form.attr('action');
            var formData = form.serialize();

            $.ajax({
                type: 'POST',
                url: url,
                data: formData,
                success: function(response) {
                    $('#inputMessVal').val("");
                    $('#forAjaxChat').html(response);

                    let myFriend = document.querySelectorAll('.our-message img, .their-message img, .input>div img');
                    myFriend.forEach((elem) => {
                        if (elem.width > elem.height) {
                            elem.style.height = '100%';
                        } else if (elem.height >= elem.width) {
                            elem.style.width = '100%';
                        }
                    });
                    const element = $('.messages');
                    console.log('assa');
                    console.log(element);
                    element.scrollTop(element[0].scrollHeight);

                },
                error: function(xhr, status, error) {

                    console.log(error);
                }
            });
        });

        $('#GettingMess').submit(function(e) {
            e.preventDefault();
            e.stopPropagation();
            var form = $(this);
            var url = form.attr('action');
            var formData = form.serialize();

            $.ajax({
                type: 'GET',
                url: url,
                data: formData,
                success: function(response) {
                    $('#forAjaxChat').html(response);

                    $(document).ready(function () {
                        $('.user').click(function (event) {
                            $('.user.active').toggleClass('active');
                            $(this).toggleClass('active');
                        });
                        let myAvatar = document.querySelectorAll('.active-avatar img, .nickname img');
                        myAvatar.forEach((elem) => {
                            if (elem.width > elem.height) {
                                elem.style.height = '100%';
                            } else if (elem.height >= elem.width) {
                                elem.style.width = '100%';
                            }
                        });
                        let myFriend = document.querySelectorAll('.our-message img, .their-message img, .input>div img');
                        myFriend.forEach((elem) => {
                            if (elem.width > elem.height) {
                                elem.style.height = '100%';
                            } else if (elem.height >= elem.width) {
                                elem.style.width = '100%';
                            }
                        });


                        document.addEventListener("DOMContentLoaded", function () {
                            var scrollbar = document.body.clientWidth - window.innerWidth + 'px';
                            console.log(scrollbar);
                            document.querySelector('[href="#openModal"]').addEventListener('click', function () {
                                document.body.style.overflow = 'hidden';
                                document.querySelector('#openModal').style.marginLeft = scrollbar;
                            });
                            document.querySelector('[href="#close"]').addEventListener('click', function () {
                                document.body.style.overflow = 'visible';
                                document.querySelector('#openModal').style.marginLeft = '0px';
                            });
                        });

                        const element = $('.messages');
                        console.log('assa');
                        console.log(element);
                        element.scrollTop(element[0].scrollHeight);
                    })


                    $(window).on('load', function() {
                        alert('work');
                    });

                },
                error: function(xhr, status, error) {
                    console.log(error);
                }
            });
        });


    });


</script>
@*<div class="modal fade" id="exampleModal" tabindex="-1" aria-labelledby="exampleModalLabel" aria-hidden="true">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="exampleModalLabel">Добавить новый чат</h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
            </div>
            <div class="modal-body">
                <form method="post" action="AddingNewChat" name="myForm" onsubmit="return validateFormEmpty()">
                    <div class="mb-3">
                        <label for="chatName" class="col-form-label">Имя чата:</label>
                        <input type="text" class="form-control" name="name" id="chatName">
                    </div>
                    <div class="mb-3">
                        <label for="userName" class="col-form-label">Имя пользователя:</label>
                        <input type="text" class="form-control" name="SecondUserName" id="userName">
                    </div>
                    <div class="modal-footer">
                        <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Отмена</button>
                        <button type="submit" class="btn btn-primary" id="Button-for-adding-new-chat">Добавить</button>
                    </div>
                </form>
            </div>

        </div>
    </div>
</div>

*@


<script>



    function validateFormEmpty() {
        console.log("validateFormEmpty called");
        var chatName = document.getElementById("chatName").value;
        if (chatName == "") {
            alert("You need to set all fields");
            return false;
        } else {
            if (chatName.length > 18) {
                alert("Name of chat need get less than 18 symbols");
                return false;
            }

        }
    }

    var objDiv = document.getElementById("messages-box");

</script>












@*<style>
    .user-list {
        height: 100vh;
        overflow-y: auto;
        border-right: 1px solid #ddd;
    }

    .chat-box3 {
        height: 80vh;
        border: 1px solid #ddd;
        overflow-y: auto;
        display: flex;
        flex-direction: column;
        justify-content: flex-end;
    }

    #messages-box2 {
        height: 80vh;
        border: 1px solid #ddd;
        overflow-y: auto;
        display: flex;
        flex-direction: column;
        justify-content: flex-end;
    }

    #messages-box2 {
        height: 850px;
        overflow-y: scroll;
    }

    .chat-message {
        margin: 5px;
        padding: 10px;
        background-color: #c9c9c9;
        border-radius: 10px;
        max-width: 60%;
    }

    .outgoing-message {
        margin-left: auto;
        background-color: #fff;
    }

    .form-message {
        margin-top: 10px;
        display: flex;
    }

        .form-message input[type="text"] {
            flex: 1;
            margin-right: 5px;
        }

    .add-chat-btn {
        display: flex;
        justify-content: center;
        align-items: center;
        height: 50px;
        width: 50px;
        background-color: #000;
        border-radius: 50%;
        color: #fff;
        font-size: 24px;
        margin: 10px 0;
    }

        .add-chat-btn:hover {
            background-color: #f60;
            cursor: pointer;
        }

    .list-group-item.add-chat {
        background-color: orange;
        color: #000;
    }

    .outgoing-message {
        margin-left: auto;
        background-color: #c9c9c9;
        text-align: right;
    }

    .chat-message .message-meta {
        font-size: 0.8rem;
        color: #999;
        margin-bottom: 0.3rem;
        text-align: right;
    }

    .chat-box3 {
        height: 850px;
        overflow-y: scroll;
    }

    .user-list {
        height: 400px;
        overflow-y: scroll;
    }


    .user-list {
        max-height: 500px;
        overflow-y: scroll;
    }*@